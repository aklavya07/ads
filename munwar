function _0x1541() {
    const _0x59c0b3 = [
        '63PUXTnP',
        'error',
        '212839eSLjVc',
        'Text\x20not\x20found',
        'Error:',
        'key',
        '2073420ENfnFe',
        'message',
        'black',
        'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=',
        'json',
        'disconnect',
        'text',
        'replace',
        '334619SqTjSM',
        'AIzaSyD1q5S4dEjiRp0v-i6MF5ACMP2tCGtJZDI',
        'querySelector',
        'style',
        'Extracted\x20Text:',
        'closest',
        '5125206jxfdDk',
        'Formatted\x20Clipboard\x20Text:',
        'color',
        '950FhlekN',
        '.lg\x5c:t-mb-15.t-mb-10.t-text-black.t-text-big.lg\x5c:t-text-xl.t-font-bold',
        '2256uTykVB',
        'Failed\x20to\x20paste:',
        'input',
        '[aria-labelledby=\x22instruction-card\x22]',
        'POST',
        'value',
        '\x20please\x20Solve\x20a\x20question\x20in\x20simple\x20way\x20in\x20c++\x20Language\x20format',
        '23913fbnAJz',
        'catch',
        'candidates',
        'writeText',
        'application/json',
        'HTTP\x20error!\x20Status:\x20',
        'target',
        'Target\x20element\x20not\x20found',
        '2BbGEJf',
        'Cleaned\x20Text:',
        'trim',
        '5026165jHpFRC',
        'activeElement',
        '189438HSrjQL',
        'stringify',
        'addEventListener',
        'status',
        'log',
        'observe',
        'dblclick',
        'keydown',
        '\x20using\x20',
        'Error\x20copying\x20to\x20clipboard:',
        '\x0a\x20print\x20in\x20proper\x20c++\x20Language\x20\x20the\x20output\x20that\x20he/she\x20asked\x20for,\x20keeping\x20in\x20mind\x20this\x20thing.',
        'div[aria-labelledby=\x22each-type-question\x22]',
        'readText'
    ];
    _0x1541 = function () {
        return _0x59c0b3;
    };
    return _0x1541();
}
(function (_0x5c9b97, _0x550a7d) {
    const _0x1b8fcb = _0x5c9b97();
    function _0x1f7a02(_0x6fa717, _0x167b88) {
        return _0x56c8(_0x6fa717 - -0x1de, _0x167b88);
    }
    while (!![]) {
        try {
            const _0x106f71 = parseInt(_0x1f7a02(-0x1a5, -0x199)) / 0x1 * (parseInt(_0x1f7a02(-0x1c5, -0x1da)) / 0x2) + -parseInt(_0x1f7a02(-0x1d9, -0x1ce)) / 0x3 + parseInt(_0x1f7a02(-0x1ad, -0x19c)) / 0x4 + parseInt(_0x1f7a02(-0x1c2, -0x1da)) / 0x5 + parseInt(_0x1f7a02(-0x1c0, -0x1c4)) / 0x6 * (-parseInt(_0x1f7a02(-0x1b3, -0x1a9)) / 0x7) + -parseInt(_0x1f7a02(-0x1d4, -0x1e7)) / 0x8 * (parseInt(_0x1f7a02(-0x1cd, -0x1cb)) / 0x9) + parseInt(_0x1f7a02(-0x1d6, -0x1cf)) / 0xa * (parseInt(_0x1f7a02(-0x1b1, -0x1c1)) / 0xb);
            if (_0x106f71 === _0x550a7d) {
                break;
            } else {
                _0x1b8fcb['push'](_0x1b8fcb['shift']());
            }
        } catch (_0x317fd1) {
            _0x1b8fcb['push'](_0x1b8fcb['shift']());
        }
    }
}(_0x1541, 0xe90a1));
function _0x56c8(_0x474a7, _0x1541ec) {
    const _0x56c8e7 = _0x1541();
    _0x56c8 = function (_0x23b667, _0x40617d) {
        _0x23b667 = _0x23b667 - 0x0;
        let _0x4c9221 = _0x56c8e7[_0x23b667];
        return _0x4c9221;
    };
    return _0x56c8(_0x474a7, _0x1541ec);
}
async function copyTextToClipboard(_0x7a0c91) {
    function _0x35918d(_0x391a34, _0x3dc511) {
        return _0x56c8(_0x3dc511 - 0x3e2, _0x391a34);
    }
    try {
        if (!_0x7a0c91) {
            throw new Error(_0x35918d(0x3f7, 0x410));
        }
        await navigator['clipboard'][_0x35918d(0x408, 0x3f6)](_0x7a0c91);
    } catch (_0xca76ae) {
        console['error'](_0x35918d(0x3f2, 0x409), _0xca76ae);
        throw _0xca76ae;
    }
}
async function sendToOpenAI(_0x273940) {
    function _0x5843f6(_0x36582a, _0x1489a3) {
        return _0x56c8(_0x36582a - 0x2b4, _0x1489a3);
    }
    const _0x4ae28d = _0x5843f6(0x2b4, 0x2c8);
    const _0x7d5ae5 = _0x5843f6(0x2e8, 0x2cf) + _0x4ae28d;
    const _0x307209 = {
        'method': _0x5843f6(0x2c2, 0x2ad),
        'headers': { 'Content-Type': _0x5843f6(0x2c9, 0x2b7) },
        'body': JSON[_0x5843f6(0x2d3, 0x2c7)]({ 'contents': [{ 'parts': [{ 'text': _0x273940 }] }] })
    };
    try {
        const _0x395069 = await fetch(_0x7d5ae5, _0x307209);
        if (!_0x395069['ok']) {
            throw new Error(_0x5843f6(0x2ca, 0x2b2) + _0x395069[_0x5843f6(0x2d5, 0x2d2)]);
        }
        const _0x2e8f91 = await _0x395069[_0x5843f6(0x2e9, 0x2f1)]();
        const _0x4a2276 = _0x2e8f91[_0x5843f6(0x2c7, 0x2b1)];
        const _0x15db68 = _0x4a2276[0x0]['content']['parts'][0x0][_0x5843f6(0x2eb, 0x301)];
        console['log'](_0x5843f6(0x2b7, 0x2a2), _0x15db68);
        await copyTextToClipboard(_0x15db68);
        return _0x15db68;
    } catch (_0x4ad0f2) {
        console[_0x5843f6(0x2e0, 0x2f6)](_0x5843f6(0x2e3, 0x2d9), _0x4ad0f2[_0x5843f6(0x2e6, 0x2fe)]);
        throw _0x4ad0f2;
    }
}
async function handleDoubleClick(_0x481a3d) {
    function _0x407482(_0x2e0075, _0x2a2061) {
        return _0x56c8(_0x2a2061 - -0x136, _0x2e0075);
    }
    try {
        const _0x20e02e = _0x481a3d[_0x407482(-0x133, -0x11f)][_0x407482(-0x131, -0x132)](_0x407482(-0x111, -0x10d));
        if (!_0x20e02e)
            throw new Error(_0x407482(-0x127, -0x11e));
        const _0x596f34 = _0x20e02e['innerText'][_0x407482(-0xef, -0xfe)](/\n{3,}/g, '\x0a')[_0x407482(-0x101, -0x11b)]();
        console[_0x407482(-0xff, -0x114)](_0x407482(-0x136, -0x11c), _0x596f34);
        const _0x3af77b = document[_0x407482(-0x150, -0x135)](_0x407482(-0x117, -0x129));
        let _0xf815fb = '';
        if (!_0x3af77b) {
            _0xf815fb = _0x596f34 + _0x407482(-0x11e, -0x126);
        } else {
            _0xf815fb = _0x596f34 + _0x407482(-0xfa, -0x110) + _0x3af77b['innerText'] + _0x407482(-0x120, -0x10e);
        }
        console[_0x407482(-0xff, -0x114)](_0x407482(-0x11c, -0x130), _0xf815fb);
        await copyTextToClipboard(_0xf815fb);
        _0xf815fb = await navigator['clipboard'][_0x407482(-0xf6, -0x10c)]();
        await sendToOpenAI(_0xf815fb);
        const _0x2f67bb = document[_0x407482(-0x13f, -0x135)](_0x407482(-0x124, -0x12d));
        if (_0x2f67bb) {
            _0x2f67bb[_0x407482(-0x13f, -0x134)][_0x407482(-0x122, -0x12f)] = 'grey';
            setTimeout(() => {
                function _0x417466(_0x4b6aac, _0x51f83a) {
                    return _0x407482(_0x51f83a, _0x4b6aac - 0x265);
                }
                _0x2f67bb[_0x417466(0x131, 0x134)][_0x417466(0x136, 0x139)] = _0x417466(0x162, 0x147);
            }, 0xbb8);
        }
    } catch (_0x24fc71) {
        console[_0x407482(-0x125, -0x10a)](_0x407482(-0x121, -0x107), _0x24fc71[_0x407482(-0x10a, -0x104)]);
    }
}
function _0x2a1b47(_0xec22f1, _0xde0367) {
    return _0x56c8(_0xec22f1 - -0x1fd, _0xde0367);
}
function Hack() {
    function _0x437a7f(_0x31f6fa, _0x50f3c0) {
        return _0x56c8(_0x31f6fa - 0x328, _0x50f3c0);
    }
    const _0xa72dfa = new MutationObserver((_0x313d39, _0x38da0a) => {
        function _0xd0b244(_0x1438a7, _0x465901) {
            return _0x56c8(_0x1438a7 - 0x165, _0x465901);
        }
        if (document[_0xd0b244(0x166, 0x16a)](_0xd0b244(0x18e, 0x1a6))) {
            _0x38da0a[_0xd0b244(0x19b, 0x1a2)]();
        }
    });
    _0xa72dfa[_0x437a7f(0x34b, 0x354)](document, {
        'childList': !![],
        'subtree': !![]
    });
    document[_0x437a7f(0x348, 0x347)](_0x437a7f(0x34c, 0x335), handleDoubleClick);
}
document[_0x2a1b47(-0x1dd, -0x1f6)](_0x2a1b47(-0x1d8, -0x1d4), _0x58396d => {
    function _0x599dc6(_0x16c2f4, _0x1f064b) {
        return _0x2a1b47(_0x1f064b - 0x44f, _0x16c2f4);
    }
    if (_0x58396d['ctrlKey'] && _0x58396d[_0x599dc6(0x293, 0x282)] === 'y' || _0x58396d['altKey'] && _0x58396d[_0x599dc6(0x274, 0x282)] === 'y') {
        navigator['clipboard'][_0x599dc6(0x27f, 0x27c)]()['then'](_0x296abd => {
            function _0x36f770(_0x4acbe6, _0xcb57bc) {
                return _0x599dc6(_0x4acbe6, _0xcb57bc - -0x4d);
            }
            if (document[_0x36f770(0x207, 0x222)] instanceof HTMLInputElement || document[_0x36f770(0x233, 0x222)] instanceof HTMLTextAreaElement) {
                document[_0x36f770(0x238, 0x222)][_0x36f770(0x226, 0x214)] = _0x296abd;
                document[_0x36f770(0x23f, 0x222)]['dispatchEvent'](new Event(_0x36f770(0x229, 0x211), { 'bubbles': !![] }));
            }
        })[_0x599dc6(0x269, 0x264)](_0x5ab27c => {
            function _0x4575b8(_0x6bbe32, _0x3d1adf) {
                return _0x599dc6(_0x3d1adf, _0x6bbe32 - 0xad);
            }
            console[_0x4575b8(0x32b, 0x332)](_0x4575b8(0x30a, 0x317), _0x5ab27c);
        });
    }
});
setTimeout(() => {
    Hack();
}, 0x9c40);
